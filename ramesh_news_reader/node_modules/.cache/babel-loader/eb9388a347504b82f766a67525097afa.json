{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SAURAV BORAH\\\\Desktop\\\\project_news_alan_ai-master\\\\src\\\\components\\\\NewsCards\\\\NewsCard\\\\NewsCard.js\";\nimport React, { useState, useEffect, createRef } from 'react';\nimport { Card, CardActions, CardActionArea, CardContent, CardMedia, Button, Typography } from '@material-ui/core'; //importing these from materialui to create different components which are already present in material-ui\n\nimport useStyles from './styles';\n\nconst NewsCard = ({\n  article: {\n    description,\n    publishedAt,\n    source,\n    title,\n    url,\n    urlToImage\n  },\n  activeArticle,\n  i\n}) => {\n  const classes = useStyles();\n  const [elRefs, setElRefs] = useState([]);\n\n  const scrollToRef = ref => window.scroll(0, ref.current.offsetTop - 50);\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    setElRefs(refs => Array(20).fill().map((_, j) => refs[j] || createRef()));\n  }, []);\n  useEffect(() => {\n    if (i === activeArticle && elRefs[activeArticle]) {\n      scrollToRef(elRefs[activeArticle]);\n    }\n  }, [i, activeArticle, elRefs]);\n  return (\n    /*#__PURE__*/\n    //we have card element and under it we have card action area which is the clickable part of the card\n    //inside card action area we have card media which will containg the image  \n    //inside it we will have two typography component one of which will show the publishedat(converted to date string)  and other that will show the source name\n    //below it we will have another typography component which will be having gutterbottom(padding/margin at the bottom)\n    React.createElement(Card, {\n      ref: elRefs[i],\n      className: activeArticle === i ? classes.activeCard : classes.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(CardActionArea, {\n      href: url,\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardMedia, {\n      className: classes.media,\n      image: urlToImage || 'https://www.industry.gov.au/sites/default/files/August%202018/image/news-placeholder-738.png',\n      title: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.details,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, new Date(publishedAt).toDateString()), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, source.name)), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.title,\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, title), /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, description))), /*#__PURE__*/React.createElement(CardActions, {\n      className: classes.cardActions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      color: \"primary\",\n      href: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"Learn More\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      color: \"textSecondary\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, i + 1)))\n  );\n};\n\nexport default NewsCard;","map":{"version":3,"sources":["C:/Users/SAURAV BORAH/Desktop/project_news_alan_ai-master/src/components/NewsCards/NewsCard/NewsCard.js"],"names":["React","useState","useEffect","createRef","Card","CardActions","CardActionArea","CardContent","CardMedia","Button","Typography","useStyles","NewsCard","article","description","publishedAt","source","title","url","urlToImage","activeArticle","i","classes","elRefs","setElRefs","scrollToRef","ref","window","scroll","current","offsetTop","refs","Array","fill","map","_","j","activeCard","card","media","details","Date","toDateString","name","cardActions"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createRef } from 'react';\nimport { Card, CardActions, CardActionArea, CardContent, CardMedia, Button, Typography } from '@material-ui/core';//importing these from materialui to create different components which are already present in material-ui\n\n\nimport useStyles from './styles';\n\nconst NewsCard = ({ article: { description, publishedAt, source, title, url, urlToImage }, activeArticle, i }) => {\n  const classes = useStyles();\n  const [elRefs, setElRefs] = useState([]);\n  const scrollToRef = (ref) => window.scroll(0, ref.current.offsetTop - 50);\n\n  useEffect(() => {\n    window.scroll(0, 0);\n\n    setElRefs((refs) => Array(20).fill().map((_, j) => refs[j] || createRef()));\n  }, []);\n\n  useEffect(() => {\n    if (i === activeArticle && elRefs[activeArticle]) {\n      scrollToRef(elRefs[activeArticle]);\n    }\n  }, [i, activeArticle, elRefs]);\n\n  return (\n    //we have card element and under it we have card action area which is the clickable part of the card\n    //inside card action area we have card media which will containg the image  \n    //inside it we will have two typography component one of which will show the publishedat(converted to date string)  and other that will show the source name\n    //below it we will have another typography component which will be having gutterbottom(padding/margin at the bottom)\n    <Card ref={elRefs[i]} className={ activeArticle === i ? classes.activeCard : classes.card}>\n      <CardActionArea href={url} target=\"_blank\">\n        <CardMedia className={classes.media} image={urlToImage || 'https://www.industry.gov.au/sites/default/files/August%202018/image/news-placeholder-738.png'} title={title} />\n        <div className={classes.details}>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{(new Date(publishedAt)).toDateString()}</Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{source.name}</Typography>\n        </div>\n        <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{title}</Typography>\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{description}</Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions className={classes.cardActions}>\n        <Button size=\"small\" color=\"primary\" href={url}>Learn More</Button>\n        <Typography variant=\"h5\" color=\"textSecondary\" component=\"h2\">{i + 1}</Typography>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default NewsCard;\n"]},"metadata":{},"sourceType":"module"}